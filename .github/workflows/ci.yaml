name: CI

on:
  push:
    branches: [trunk]
  pull_request:
    branches: [trunk]
  merge_group:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # postgres container for the tests to run against
    services:
      postgres:
        image: postgres
        # don't use a password because it's restricted to this single workflow run
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        # wait til postgres ready (taken from github docs)
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # we run directly on the runner machine, so link ports
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21.x"
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Check for formatting errors
        run: test -z $(gofmt -l .)
      - name: Build and test Go with race detector
        run: go test ./... -race
      - name: Build and test Go with coverage
        run: go test ./... -coverprofile cover.out
        # upload cover.out as an artifact so we can generate a web view on failure
      - name: Upload coverage profile
        uses: actions/upload-artifact@v3
        with:
          name: coverage-profile
          path: cover.out
          retention-days: 1
      - name: Print function coverage values
        run: go tool cover -func=cover.out
        # coverage check currently only checks total coverage
      - name: Check for insufficient coverage
        run: test 75 -le $(go tool cover -func=cover.out | tail -n 1 | grep -Eo "[[:space:]][[:digit:]]+")
      - name: Install Frontend Dependencies
        run: |
          cd ./frontend
          npm ci
      - name: Build Frontend
        run: |
          cd ./frontend
          npm run build
      - name: Run Frontend Tests
        env:
          CI: true
        run: |
          cd ./frontend
          npm test
